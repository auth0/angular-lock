!function(){"use strict";function t(){n.prototype.getClient=function(){},n.prototype.parseHash=function(){},this.init=function(t){if(!t)throw new Error("clientID and domain must be provided to lock");this.clientID=t.clientID,this.domain=t.domain,this.options=t.options||{}},this.$get=["$rootScope",function(t){function o(n){var o=t.$root.$$phase;"$apply"===o||"$digest"===o?n&&"function"==typeof n&&n():t.$apply(n)}function i(t){var n=t.length-1,i=t[n];return"function"==typeof i&&(t[n]=function(){var t=arguments;o(function(){i.apply(e,t)})}),t}var e=new n(this.clientID,this.domain,this.options),r={clientID:this.clientID,domain:this.domain},a={},c=[];for(var u in e)"function"==typeof e[u]&&c.push(u);for(var u=0;u<c.length;u++)a[c[u]]=function(t){var n=function(){return e[t].apply(e,i(arguments))};return n}(c[u]);return a.interceptHash=function(){t.$on("$locationChangeStart",function(t,n){if(/id_token=/.test(n)||/error=/.test(n))var o=new Auth0(r),i=window.location.hash?window.location.hash:"#"+n.replace(/http.?:\/\/[^\/]+/,"").slice(1),a=o.parseHash(i);a&&a.idToken&&e.emit("authenticated",a),a&&a.error&&e.emit("authorization_error",a)})},a}]}var n=require("auth0-lock").default;angular.module("auth0.lock",[]).provider("lock",t)}();